# This is R replication code for a paper under review named "T/racing Testosterone: Ambiguity, Absence and the Re-Inscription of Race in Hormonal Research." The data include 147 papers that have examined population differences in testosterone from 1966-2017. I plan to make this data available at a later date, largely because I plan to write to two additional papers using this data. 

#In the first section, the code outlines descriptive network statistics using statnet, including degree and betweenness centrality. In the second section, I use igraph and visNetwork to visualize the data based on two cuts. The first looks at age/gender groupings in my data and the second looks at outcomes, which is the main focus of the paper I currently have under review. 

#clearing old data
rm(list = ls())
gc()

#setting path 
setwd("C:/Users/soren/Google Drive/Biomedical MultipliciTs/Racial Differences in T/Network")

########################################################## network stats ##################

library(sna)
library(statnet)

#creating a statnet object 
dat=read.csv(file.choose(),header=TRUE)
el=as.matrix(dat)            
el[,1]=as.character(el[,1])  
el[,2]=as.character(el[,2])
evidence=network(dat,matrix.type="edgelist",directed=TRUE) 
plot(evidence)

#network size, number of edges, number of dyads 
summary(evidence)
network.size(evidence)
network.edgecount(evidence)
network.dyadcount(evidence)
as.sociomatrix(evidence)

#density  
evdensity <- gden(evidence, mode='digraph')
evdensity 

#transitivity
gtrans(evidence)

#output 
netstats <- data.frame(
  ego=network.vertex.names(evidence),
  degree=degree(evidence),
  indegree=degree(evidence, cmode="indegree"),             
  outdegree=degree(evidence, cmode="outdegree"), 
  betweenness=betweenness(evidence, cmode="directed"))
netstats
write.csv((netstats),file = 'RacialT_NetStats.csv')

detach("package:statnet")
detach("package:sna")

########################################################## visualizations ##################

library('RColorBrewer')
library('extrafont')
library('igraph')
library('plyr') 
library('visNetwork')

#detach("package:igraph")
#detach("package:visNetwork")

#creating weights for links in igraph network object - evidence file 
links <- read.csv(file.choose(),header=TRUE, as.is=TRUE) 
nodes <- read.csv(file.choose(),header=TRUE, as.is=TRUE)

#checking the data out 
head(nodes)
head(links)
nrow(nodes); length(unique(nodes$ID))
nrow(links); nrow(unique(links[,c("Source", "Target")]))

#making the network with igraph 
g <- graph_from_data_frame(d=links, vertices=nodes, directed=T) 

#cutting out loops for isolates
net <- simplify(g, remove.multiple = F, remove.loops = T)

# mapping in visNetwork 
visIgraph(net) 

# creating color palettes for the age/gender cuts
palette1 <- colorRampPalette(brewer.pal(11,"Spectral"))
palette2 <- colorRampPalette(brewer.pal(11,"PiYG"))
palette3 <- colorRampPalette(brewer.pal(11,"BrBG"))
palette4 <- colorRampPalette(brewer.pal(4,"Greys"))
display.brewer.pal(11, "Spectral")
display.brewer.pal(11, "PiYG")
display.brewer.pal(11, "BrBG")
display.brewer.pal(4, "Greys")
V(net)$color=V(net)$Population
V(net)$color=gsub("AdultMale",palette1(11)[10],V(net)$color) #blue 
V(net)$color=gsub("AdultFemale",palette2(11)[1],V(net)$color) #magenta
V(net)$color=gsub("Biosocial",palette1(11)[10],V(net)$color) #blue
V(net)$color=gsub("Children",palette2(11)[9],V(net)$color) #green
V(net)$color=gsub("MenWomen",palette1(11)[3],V(net)$color) #orange
V(net)$color=gsub("MenWomenChildren",palette1(11)[3],V(net)$color) #orange
V(net)$color=gsub("NonEvidence",palette2(11)[6],V(net)$color) #light grey
visIgraph(net) 

#size based on degree
V(net)$size <- V(net)$indegree*3
V(net)$label.cex=1.5

#changing edge weight
E(net)$width <- 5
visIgraph(net)

#legend 
visIgraph(net) %>% 
  visOptions(selectedBy = "Population")

network1 <- visIgraph(net) %>% 
  visOptions(selectedBy = "Population")
visSave(network1, file = "network.html")

#creating visualizations for the outcomes 
palette1 <- colorRampPalette(brewer.pal(11,"Spectral"))
palette2 <- colorRampPalette(brewer.pal(11,"PiYG"))
palette3 <- colorRampPalette(brewer.pal(11,"BrBG"))
palette4 <- colorRampPalette(brewer.pal(4,"Greys"))
display.brewer.pal(11, "Spectral")
display.brewer.pal(11, "PiYG")
display.brewer.pal(11, "BrBG")
display.brewer.pal(4, "Greys")
V(net)$color=V(net)$RaceComps
V(net)$color=gsub("Mixed",palette1(11)[3],V(net)$color) #orange
V(net)$color=gsub("Difference",palette2(11)[9],V(net)$color) #green
V(net)$color=gsub("Null",palette1(11)[1],V(net)$color) #magenta
V(net)$color=gsub("NotAvailable",palette2(11)[6],V(net)$color) #light grey
V(net)$color=gsub("NoComp",palette1(11)[10],V(net)$color) #blue 
visIgraph(net)

#legend 
visIgraph(net) %>% 
  visOptions(selectedBy = "RaceComps")

network1 <- visIgraph(net) %>% 
  visOptions(selectedBy = "RaceComps")
visSave(network1, file = "network2.html")





























